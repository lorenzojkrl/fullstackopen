{"ast":null,"code":"import _objectSpread from\"/home/lorenzo/MEGAsync/Web Dev/fullstackopen/part_2/comments_page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/lorenzo/MEGAsync/Web Dev/fullstackopen/part_2/comments_page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Note from\"./components/Note\";import noteService from\"./services/notes\";import Notification from'./components/Notification';import Footer from'./components/Footer';var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newNote=_useState4[0],setNewNote=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),showAll=_useState6[0],setShowAll=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),errorMessage=_useState8[0],setErrorMessage=_useState8[1];// Before creating noteService module --------------------------------\n// 1) Using eventHandler\n// useEffect(() => {\n//     console.log('effect')\n//     const eventHandler = response => {\n//         console.log('promise fulfilled')\n//         setNotes(response.data)\n//     }\n//     const promise = axios.get('http://localhost:3001/notes')\n//     promise.then(eventHandler)\n// }, [])\n// 2) Using useEffect\n// useEffect(() => {\n//     console.log('effect')\n//     axios\n//         .get('http://localhost:3001/notes')\n//         .then(response => {\n//             console.log('promise fulfilled')\n//             setNotes(response.data)\n//         })\n// }, [])\n// console.log('render', notes.length, 'notes')\n// 3) Rewriting useEffect\n// const hook = () => {\n//     console.log('effect')\n//     axios\n//         .get('http://localhost:3001/notes')\n//         .then(response => {\n//             console.log('promise fulfilled')\n//             setNotes(response.data)\n//         })\n// }\n// useEffect(hook, [])\n// After creating noteService module --------------------------------\nuseEffect(function(){noteService.getAll().then(function(initialNotes){setNotes(initialNotes);});},[]);var addNote=function addNote(event){event.preventDefault();// The default action submits a form & cause the page to reload.\n// console.log('button clicked', event.target)\nvar noteObject={content:newNote,date:new Date().toISOString(),important:Math.random()<0.5,id:notes.length+1// better to let the server generate ids for our resources\n};// Before noteService module\n// axios\n//     .post('http://localhost:3001/notes', noteObject)\n//     .then(response => {\n//         console.log(response)\n//         setNotes(notes.concat(response.data))\n//         setNewNote('')\n//     })\nnoteService.create(noteObject).then(function(returnedNote){setNotes(notes.concat(returnedNote));setNewNote('');});};var toggleImportanceOf=function toggleImportanceOf(id){// console.log('importance of ' + id + ' needs to be toggled')\n// const url = `http://localhost:3001/notes/${id}` // unique url for each note resource based on its id. Before noteService\nvar note=notes.find(function(n){return n.id===id;});// find the note we want to modify, and we then assign it to the note variable\nvar changedNote=_objectSpread(_objectSpread({},note),{},{important:!note.important});// create a new object that is an exact copy of the old note, apart from the important property.\n// Before noteService\n// axios.put(url, changedNote).then(response => {\n//     setNotes(notes.map(note => note.id !== id ? note : response.data))\n// })\n// noteService\n//     .update(id, changedNote)\n//     .then(returnedNote => {\n//         setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n//     })\nnoteService.update(id,changedNote).then(function(returnedNote){setNotes(notes.map(function(note){return note.id!==id?note:returnedNote;}));}).catch(function(error){setErrorMessage(\"Note '\".concat(note.content,\"' was already removed from server\"));setTimeout(function(){setErrorMessage(null);},5000);});};var handleNoteChange=function handleNoteChange(event){// console.log(event.target.value)\nsetNewNote(event.target.value);};var notesToShow=showAll?notes:notes.filter(function(note){return note.important;});//  === true is redundant because note.important is either true or false\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Notes\"),/*#__PURE__*/React.createElement(Notification,{message:errorMessage}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return setShowAll(!showAll);}},\"show \",showAll?'important':'all')),/*#__PURE__*/React.createElement(\"ul\",null,notesToShow.map(function(note,i){return/*#__PURE__*/React.createElement(Note,{key:i,note:note,toggleImportance:function toggleImportance(){return toggleImportanceOf(note.id);}});})),/*#__PURE__*/React.createElement(\"form\",{onSubmit:addNote},/*#__PURE__*/React.createElement(\"input\",{value:newNote,onChange:handleNoteChange}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"save\")),/*#__PURE__*/React.createElement(Footer,null));};export default App;","map":{"version":3,"sources":["/home/lorenzo/MEGAsync/Web Dev/fullstackopen/part_2/comments_page/src/App.js"],"names":["React","useState","useEffect","Note","noteService","Notification","Footer","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","getAll","then","initialNotes","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","id","length","create","returnedNote","concat","toggleImportanceOf","note","find","n","changedNote","update","map","catch","error","setTimeout","handleNoteChange","target","value","notesToShow","filter","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\"\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\n\nconst App = () => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('')\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(null)\n    // Before creating noteService module --------------------------------\n    // 1) Using eventHandler\n    // useEffect(() => {\n    //     console.log('effect')\n\n    //     const eventHandler = response => {\n    //         console.log('promise fulfilled')\n    //         setNotes(response.data)\n    //     }\n\n    //     const promise = axios.get('http://localhost:3001/notes')\n    //     promise.then(eventHandler)\n    // }, [])\n\n    // 2) Using useEffect\n    // useEffect(() => {\n    //     console.log('effect')\n    //     axios\n    //         .get('http://localhost:3001/notes')\n    //         .then(response => {\n    //             console.log('promise fulfilled')\n    //             setNotes(response.data)\n    //         })\n    // }, [])\n    // console.log('render', notes.length, 'notes')\n\n    // 3) Rewriting useEffect\n    // const hook = () => {\n    //     console.log('effect')\n    //     axios\n    //         .get('http://localhost:3001/notes')\n    //         .then(response => {\n    //             console.log('promise fulfilled')\n    //             setNotes(response.data)\n    //         })\n    // }\n    // useEffect(hook, [])\n\n\n    // After creating noteService module --------------------------------\n    useEffect(() => {\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes)\n            })\n    }, [])\n\n    const addNote = event => {\n        event.preventDefault() // The default action submits a form & cause the page to reload.\n        // console.log('button clicked', event.target)\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() < 0.5,\n            id: notes.length + 1 // better to let the server generate ids for our resources\n        }\n\n        // Before noteService module\n        // axios\n        //     .post('http://localhost:3001/notes', noteObject)\n        //     .then(response => {\n        //         console.log(response)\n        //         setNotes(notes.concat(response.data))\n        //         setNewNote('')\n        //     })\n\n        noteService\n            .create(noteObject)\n            .then(returnedNote => {\n                setNotes(notes.concat(returnedNote))\n                setNewNote('')\n            })\n\n    }\n\n    const toggleImportanceOf = id => {\n        // console.log('importance of ' + id + ' needs to be toggled')\n        // const url = `http://localhost:3001/notes/${id}` // unique url for each note resource based on its id. Before noteService\n        const note = notes.find(n => n.id === id) // find the note we want to modify, and we then assign it to the note variable\n        const changedNote = { ...note, important: !note.important } // create a new object that is an exact copy of the old note, apart from the important property.\n\n        // Before noteService\n        // axios.put(url, changedNote).then(response => {\n        //     setNotes(notes.map(note => note.id !== id ? note : response.data))\n        // })\n        // noteService\n        //     .update(id, changedNote)\n        //     .then(returnedNote => {\n        //         setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n        //     })\n        noteService\n            .update(id, changedNote)\n            .then(returnedNote => {\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n            })\n            .catch(error => {\n                setErrorMessage(\n                    `Note '${note.content}' was already removed from server`\n                )\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n            })\n\n    }\n\n    const handleNoteChange = (event) => {\n        // console.log(event.target.value)\n        setNewNote(event.target.value)\n    }\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important) //  === true is redundant because note.important is either true or false\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message={errorMessage} />\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n            <ul>\n                {notesToShow.map((note, i) =>\n                    <Note\n                        key={i}\n                        note={note}\n                        toggleImportance={() => toggleImportanceOf(note.id)} />\n                )}\n            </ul>\n            <form onSubmit={addNote}>\n                <input\n                    value={newNote}\n                    onChange={handleNoteChange}\n                />\n                <button type=\"submit\">save</button>\n            </form>\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}