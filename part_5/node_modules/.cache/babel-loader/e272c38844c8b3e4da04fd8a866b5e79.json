{"ast":null,"code":"var _jsxFileName = \"/home/lorenzo/MEGAsync/Web Dev/back-end/part_5_new/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport LoginForm from './components/LoginForm';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState({\n    message: null,\n    isSuccessful: true\n  });\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    // Search for token in local storage\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      // server response (inc. token & user details) is saved to user\n      const user = await loginService.login({\n        username,\n        password\n      }); // Save token in local storage\n\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage({\n        message: 'Wrong credentials',\n        isSuccessful: false\n      });\n      setTimeout(() => {\n        setErrorMessage({\n          message: null\n        });\n      }, 5000);\n    }\n  };\n\n  const handleAddBlog = event => {\n    event.preventDefault();\n\n    try {\n      let newBlog = {\n        title: title,\n        author: author,\n        url: url\n      };\n      blogService.create(newBlog).then(savedBlog => console.log('savedBlog', savedBlog)); // .then(savedBlog => setBlogs(blogs.concat(savedBlog)))\n\n      setTitle('');\n      setAuthor('');\n      setUrl('');\n      setErrorMessage({\n        message: `A new blog: ${newBlog.title}`,\n        isSuccessful: true\n      });\n      setTimeout(() => {\n        setErrorMessage({\n          message: null\n        });\n      }, 5000);\n    } catch (exception) {\n      // setErrorMessage({ message: `Something went wrong ${exception}`, isSuccessful: false })\n      // setTimeout(() => {\n      //   setErrorMessage({ message: null })\n      // }, 5000)\n      console.log('fucking error');\n    }\n  }; // Alternative to two return\n  // { user === null && loginForm() }\n  // { user !== null && noteForm() }\n\n\n  if (user === null) {\n    return React.createElement(React.Fragment, null, React.createElement(Notification, {\n      message: errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(LoginForm, {\n      username: username,\n      setUsername: setUsername,\n      password: password,\n      setPassword: setPassword,\n      handleLogin: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n  const cleanCredentials = () => {\n    window.localStorage.removeItem('loggedUser');\n    setUser(null);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    message: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Blogs\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, user.name, \" logged-in\"), React.createElement(\"button\", {\n    onClick: cleanCredentials,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"log out\"), React.createElement(\"form\", {\n    onSubmit: handleAddBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"title\", React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    name: \"title\",\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"author\", React.createElement(\"input\", {\n    type: \"text\",\n    value: author,\n    name: \"author\",\n    onChange: ({\n      target\n    }) => setAuthor(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"url\", React.createElement(\"input\", {\n    type: \"text\",\n    value: url,\n    name: \"url\",\n    onChange: ({\n      target\n    }) => setUrl(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"create\")), blogs.map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/lorenzo/MEGAsync/Web Dev/back-end/part_5_new/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","blogService","loginService","LoginForm","Notification","App","blogs","setBlogs","user","setUser","errorMessage","setErrorMessage","message","isSuccessful","username","setUsername","password","setPassword","title","setTitle","author","setAuthor","url","setUrl","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","exception","setTimeout","handleAddBlog","newBlog","create","savedBlog","console","log","cleanCredentials","removeItem","name","target","value","map","blog","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport LoginForm from './components/LoginForm'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState({ message: null, isSuccessful: true })\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    // Search for token in local storage\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      // server response (inc. token & user details) is saved to user\n      const user = await loginService.login({\n        username, password,\n      })\n\n      // Save token in local storage\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage({ message: 'Wrong credentials', isSuccessful: false })\n      setTimeout(() => {\n        setErrorMessage({ message: null })\n      }, 5000)\n    }\n  }\n\n\n  const handleAddBlog = (event) => {\n    event.preventDefault()\n    try {\n      let newBlog = {\n        title: title,\n        author: author,\n        url: url\n      }\n      blogService\n        .create(newBlog)\n        .then(savedBlog => console.log('savedBlog', savedBlog))\n      // .then(savedBlog => setBlogs(blogs.concat(savedBlog)))\n\n      setTitle('')\n      setAuthor('')\n      setUrl('')\n      setErrorMessage({ message: `A new blog: ${newBlog.title}`, isSuccessful: true })\n      setTimeout(() => {\n        setErrorMessage({ message: null })\n      }, 5000)\n    } catch (exception) {\n      // setErrorMessage({ message: `Something went wrong ${exception}`, isSuccessful: false })\n      // setTimeout(() => {\n      //   setErrorMessage({ message: null })\n      // }, 5000)\n      console.log('fucking error');\n    }\n\n  }\n\n\n  // Alternative to two return\n  // { user === null && loginForm() }\n  // { user !== null && noteForm() }\n\n  if (user === null) {\n    return (\n      <>\n        <Notification message={errorMessage} />\n        <LoginForm\n          username={username}\n          setUsername={setUsername}\n          password={password}\n          setPassword={setPassword}\n          handleLogin={handleLogin}\n        />\n      </>\n    )\n  }\n\n  const cleanCredentials = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n  }\n\n  return (\n    <div>\n      <Notification message={errorMessage} />\n      <h2>Blogs</h2>\n      <p>{user.name} logged-in</p>\n      <button onClick={cleanCredentials}>log out</button>\n      <form onSubmit={handleAddBlog}>\n        <div>\n          title\n        <input\n            type='text'\n            value={title}\n            name='title'\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n        <input\n            type='text'\n            value={author}\n            name='author'\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          url\n        <input\n            type='text'\n            value={url}\n            name='url'\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </div>\n        <button type=\"submit\">create</button>\n      </form>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}