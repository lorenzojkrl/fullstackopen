{"ast":null,"code":"var _jsxFileName = \"/home/lorenzo/MEGAsync/Web Dev/back-end/part_5_new/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport LoginForm from './components/LoginForm';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [newBlog, setNewBlog] = useState('');\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    // Search for token in local storage\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log('logging in with', username, password);\n\n    try {\n      // server response (inc. token & user details) is saved to user\n      const user = await loginService.login({\n        username,\n        password\n      }); // Save token in local storage\n\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('Wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const addBlog = () => {\n    console.log('In addBlog');\n  };\n\n  const handleBlogChange = () => {\n    console.log('dummy');\n  }; // Alternative to two return\n  // { user === null && loginForm() }\n  // { user !== null && noteForm() }\n\n\n  if (user === null) {\n    return React.createElement(LoginForm, {\n      username: username,\n      setUsername: setUsername,\n      password: password,\n      setPassword: setPassword,\n      handleLogin: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  }\n\n  const cleanCredentials = () => {\n    window.localStorage.removeItem('loggedUser');\n    setUser('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Blogs\"), console.log('user, ', user), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, user.name, \" logged-in\"), React.createElement(\"button\", {\n    onClick: () => cleanCredentials,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"log out\"), React.createElement(\"form\", {\n    onSubmit: addBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newBlog,\n    onChange: handleBlogChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"save\")), blogs.map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/lorenzo/MEGAsync/Web Dev/back-end/part_5_new/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","blogService","loginService","LoginForm","App","blogs","setBlogs","user","setUser","errorMessage","setErrorMessage","username","setUsername","password","setPassword","newBlog","setNewBlog","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","console","log","login","setItem","stringify","exception","setTimeout","addBlog","handleBlogChange","cleanCredentials","removeItem","name","map","blog","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport LoginForm from './components/LoginForm'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [newBlog, setNewBlog] = useState('')\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    // Search for token in local storage\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with', username, password)\n\n    try {\n      // server response (inc. token & user details) is saved to user\n      const user = await loginService.login({\n        username, password,\n      })\n\n      // Save token in local storage\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const addBlog = () => {\n    console.log('In addBlog');\n  }\n\n  const handleBlogChange = () => {\n    console.log('dummy')\n  }\n\n\n  // Alternative to two return\n  // { user === null && loginForm() }\n  // { user !== null && noteForm() }\n\n  if (user === null) {\n    return (\n      <LoginForm\n        username={username}\n        setUsername={setUsername}\n        password={password}\n        setPassword={setPassword}\n        handleLogin={handleLogin}\n      />\n    )\n  }\n\n  const cleanCredentials = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser('')\n  }\n  return (\n    <div>\n      <h2>Blogs</h2>\n      {console.log('user, ', user)}\n      <p>{user.name} logged-in</p>\n      <button onClick={() => cleanCredentials}>log out</button>\n      <form onSubmit={addBlog}>\n        <input\n          value={newBlog}\n          onChange={handleBlogChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}