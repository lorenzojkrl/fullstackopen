{"ast":null,"code":"var _jsxFileName = \"/home/lorenzo/MEGAsync/Web Dev/back-end/part_5_new/bloglist-frontend/src/components/Blog.js\";\nimport React, { useState } from 'react';\nimport blogService from '../services/blogs';\n\nconst Blog = ({\n  blog\n}) => {\n  const [visible, setVisible] = useState(false);\n  const [view, setView] = useState('View');\n  const blogStyle = {\n    border: '1px solid black',\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 10,\n    marginBottom: 2\n  };\n  const showWhenVisible = {\n    display: visible ? '' : 'none'\n  };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n    setView('Hide');\n  };\n\n  const addLike = async blogToUpdate => {\n    try {\n      const returnedBlog = await blogService.update(id, blogToUpdate);\n      setBlogs(blogs.concat(returnedBlog));\n      blogFormRef.current.toggleVisibility();\n      setNotification({\n        message: `A new blog: ${newBlog.title} by ${newBlog.author}`,\n        isSuccessful: true\n      });\n      setTimeout(() => {\n        setNotification({\n          message: null\n        });\n      }, 5000);\n    } catch (exception) {\n      setNotification({\n        message: `Title and Url are necessary`,\n        isSuccessful: false\n      });\n      setTimeout(() => {\n        setNotification({\n          message: null\n        });\n      }, 5000);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    style: blogStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, blog.title, \" by \", blog.author, React.createElement(\"button\", {\n    onClick: toggleVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, view), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: showWhenVisible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, blog.url), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, blog.likes, React.createElement(\"button\", {\n    onClick: addLike,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"like\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, blog.author)));\n};\n\nexport default Blog;","map":{"version":3,"sources":["/home/lorenzo/MEGAsync/Web Dev/back-end/part_5_new/bloglist-frontend/src/components/Blog.js"],"names":["React","useState","blogService","Blog","blog","visible","setVisible","view","setView","blogStyle","border","paddingTop","paddingBottom","paddingLeft","marginBottom","showWhenVisible","display","toggleVisibility","addLike","blogToUpdate","returnedBlog","update","id","setBlogs","blogs","concat","blogFormRef","current","setNotification","message","newBlog","title","author","isSuccessful","setTimeout","exception","url","likes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,MAAD,CAAhC;AAEA,QAAMQ,SAAS,GAAG;AAChBC,IAAAA,MAAM,EAAE,iBADQ;AAEhBC,IAAAA,UAAU,EAAE,EAFI;AAGhBC,IAAAA,aAAa,EAAE,EAHC;AAIhBC,IAAAA,WAAW,EAAE,EAJG;AAKhBC,IAAAA,YAAY,EAAE;AALE,GAAlB;AAOA,QAAMC,eAAe,GAAG;AAAEC,IAAAA,OAAO,EAAEX,OAAO,GAAG,EAAH,GAAQ;AAA1B,GAAxB;;AAEA,QAAMY,gBAAgB,GAAG,MAAM;AAC7BX,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAG,IAAAA,OAAO,CAAC,MAAD,CAAP;AACD,GAHD;;AAKA,QAAMU,OAAO,GAAG,MAAOC,YAAP,IAAwB;AACtC,QAAI;AACF,YAAMC,YAAY,GAAG,MAAMlB,WAAW,CAACmB,MAAZ,CAAmBC,EAAnB,EAAuBH,YAAvB,CAA3B;AACAI,MAAAA,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaL,YAAb,CAAD,CAAR;AACAM,MAAAA,WAAW,CAACC,OAAZ,CAAoBV,gBAApB;AACAW,MAAAA,eAAe,CAAC;AAAEC,QAAAA,OAAO,EAAG,eAAcC,OAAO,CAACC,KAAM,OAAMD,OAAO,CAACE,MAAO,EAA7D;AAAgEC,QAAAA,YAAY,EAAE;AAA9E,OAAD,CAAf;AACAC,MAAAA,UAAU,CAAC,MAAM;AACfN,QAAAA,eAAe,CAAC;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KARD,CAQE,OAAOM,SAAP,EAAkB;AAClBP,MAAAA,eAAe,CAAC;AAAEC,QAAAA,OAAO,EAAG,6BAAZ;AAA0CI,QAAAA,YAAY,EAAE;AAAxD,OAAD,CAAf;AACAC,MAAAA,UAAU,CAAC,MAAM;AACfN,QAAAA,eAAe,CAAC;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAfD;;AAiBA,SACE;AAAK,IAAA,KAAK,EAAEpB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAAC2B,KADR,UACmB3B,IAAI,CAAC4B,MADxB,EAEE;AAAQ,IAAA,OAAO,EAAEf,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCV,IAApC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAK,IAAA,KAAK,EAAEQ,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMX,IAAI,CAACgC,GAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhC,IAAI,CAACiC,KADR,EAEE;AAAQ,IAAA,OAAO,EAAEnB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMd,IAAI,CAAC4B,MAAX,CANF,CAJF,CADF;AAgBD,CAnDD;;AAqDA,eAAe7B,IAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport blogService from '../services/blogs'\r\n\r\nconst Blog = ({ blog }) => {\r\n  const [visible, setVisible] = useState(false)\r\n  const [view, setView] = useState('View')\r\n\r\n  const blogStyle = {\r\n    border: '1px solid black',\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    paddingLeft: 10,\r\n    marginBottom: 2,\r\n  }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n    setView('Hide')\r\n  }\r\n\r\n  const addLike = async (blogToUpdate) => {\r\n    try {\r\n      const returnedBlog = await blogService.update(id, blogToUpdate)\r\n      setBlogs(blogs.concat(returnedBlog))\r\n      blogFormRef.current.toggleVisibility()\r\n      setNotification({ message: `A new blog: ${newBlog.title} by ${newBlog.author}`, isSuccessful: true })\r\n      setTimeout(() => {\r\n        setNotification({ message: null })\r\n      }, 5000)\r\n    } catch (exception) {\r\n      setNotification({ message: `Title and Url are necessary`, isSuccessful: false })\r\n      setTimeout(() => {\r\n        setNotification({ message: null })\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={blogStyle}>\r\n      {blog.title} by {blog.author}\r\n      <button onClick={toggleVisibility}>{view}</button>\r\n      <div></div>\r\n      <div style={showWhenVisible}>\r\n        <div>{blog.url}</div>\r\n        <div>\r\n          {blog.likes}\r\n          <button onClick={addLike}>like</button>\r\n        </div>\r\n        <div>{blog.author}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n"]},"metadata":{},"sourceType":"module"}