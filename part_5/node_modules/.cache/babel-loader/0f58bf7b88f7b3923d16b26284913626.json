{"ast":null,"code":"var _jsxFileName = \"/home/lorenzo/MEGAsync/Web Dev/back-end/part_5_new/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\nimport LoginForm from './components/LoginForm';\nimport AddBlogForm from './components/AddBlogForm';\nimport Togglable from './components/Togglable';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState({\n    message: null,\n    isSuccessful: true\n  });\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n  const [addBlogVisible, setAddBlogVisible] = useState(false);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    // Search for token in local storage\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []); // Using async/await allows to get the outcome of the request \n  // before moving forward\n  // e.g. login or show error message\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      // server response (inc. token & user details) is saved to user\n      const user = await loginService.login({\n        username,\n        password\n      }); // Save token in local storage\n\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage({\n        message: 'Wrong credentials',\n        isSuccessful: false\n      });\n      setTimeout(() => {\n        setErrorMessage({\n          message: null\n        });\n      }, 5000);\n    }\n  };\n\n  const handleAddBlog = async event => {\n    event.preventDefault();\n    let newBlog = {\n      title: title,\n      author: author,\n      url: url\n    };\n\n    try {\n      const returnedBlog = await blogService.create(newBlog);\n      setBlogs(blogs.concat(returnedBlog));\n      setTitle('');\n      setAuthor('');\n      setUrl('');\n      setErrorMessage({\n        message: `A new blog: ${newBlog.title}`,\n        isSuccessful: true\n      });\n      setTimeout(() => {\n        setErrorMessage({\n          message: null\n        });\n      }, 5000);\n    } catch (exception) {\n      setErrorMessage({\n        message: `Title and Url are necessary`,\n        isSuccessful: false\n      });\n      setTimeout(() => {\n        setErrorMessage({\n          message: null\n        });\n      }, 5000);\n    }\n  }; // Alternative to two return\n  // { user === null && loginForm() }\n  // { user !== null && noteForm() }\n\n\n  if (user === null) {\n    return React.createElement(React.Fragment, null, React.createElement(Notification, {\n      message: errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(LoginForm, {\n      username: username,\n      setUsername: setUsername,\n      password: password,\n      setPassword: setPassword,\n      handleLogin: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }\n\n  const cleanCredentials = () => {\n    window.localStorage.removeItem('loggedUser');\n    setUser(null);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    message: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Blogs\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, user.name, \" logged-in\"), React.createElement(\"button\", {\n    onClick: cleanCredentials,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"log out\"), React.createElement(Togglable, {\n    buttonLabel: \"New Blog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(AddBlogForm, {\n    handleAddBlog: handleAddBlog,\n    title: title,\n    setTitle: setTitle,\n    author: author,\n    setAuthor: setAuthor,\n    url: url,\n    setUrl: setUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), blogs.map(blog => React.createElement(Blog, {\n    key: blog.id,\n    blog: blog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/lorenzo/MEGAsync/Web Dev/back-end/part_5_new/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","blogService","loginService","Notification","LoginForm","AddBlogForm","Togglable","App","blogs","setBlogs","user","setUser","errorMessage","setErrorMessage","message","isSuccessful","username","setUsername","password","setPassword","title","setTitle","author","setAuthor","url","setUrl","addBlogVisible","setAddBlogVisible","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","exception","setTimeout","handleAddBlog","newBlog","returnedBlog","create","concat","cleanCredentials","removeItem","name","map","blog","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport AddBlogForm from './components/AddBlogForm'\nimport Togglable from './components/Togglable'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState({ message: null, isSuccessful: true })\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n  const [addBlogVisible, setAddBlogVisible] = useState(false)\n\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    // Search for token in local storage\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  // Using async/await allows to get the outcome of the request \n  // before moving forward\n  // e.g. login or show error message\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      // server response (inc. token & user details) is saved to user\n      const user = await loginService.login({\n        username, password,\n      })\n\n      // Save token in local storage\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage({ message: 'Wrong credentials', isSuccessful: false })\n      setTimeout(() => {\n        setErrorMessage({ message: null })\n      }, 5000)\n    }\n  }\n\n\n  const handleAddBlog = async (event) => {\n    event.preventDefault()\n    let newBlog = {\n      title: title,\n      author: author,\n      url: url\n    }\n    try {\n      const returnedBlog = await blogService.create(newBlog)\n      setBlogs(blogs.concat(returnedBlog))\n\n      setTitle('')\n      setAuthor('')\n      setUrl('')\n      setErrorMessage({ message: `A new blog: ${newBlog.title}`, isSuccessful: true })\n      setTimeout(() => {\n        setErrorMessage({ message: null })\n      }, 5000)\n    } catch (exception) {\n      setErrorMessage({ message: `Title and Url are necessary`, isSuccessful: false })\n      setTimeout(() => {\n        setErrorMessage({ message: null })\n      }, 5000)\n    }\n\n  }\n\n\n  // Alternative to two return\n  // { user === null && loginForm() }\n  // { user !== null && noteForm() }\n\n  if (user === null) {\n    return (\n      <>\n        <Notification message={errorMessage} />\n        <LoginForm\n          username={username}\n          setUsername={setUsername}\n          password={password}\n          setPassword={setPassword}\n          handleLogin={handleLogin}\n        />\n      </>\n    )\n  }\n\n  const cleanCredentials = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n  }\n\n  return (\n    <div>\n      <Notification message={errorMessage} />\n      <h2>Blogs</h2>\n      <p>{user.name} logged-in</p>\n      <button onClick={cleanCredentials}>log out</button>\n      <Togglable buttonLabel=\"New Blog\">\n        <AddBlogForm\n          handleAddBlog={handleAddBlog}\n          title={title}\n          setTitle={setTitle}\n          author={author}\n          setAuthor={setAuthor}\n          url={url}\n          setUrl={setUrl}\n        />\n      </Togglable>\n\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}