{"ast":null,"code":"var _jsxFileName = \"/home/lorenzo/MEGAsync/Web Dev/fullstack2020/part2/lesson/comments_page/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from \"./components/Note\";\n\nconst App = props => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true); // Using eventHnadler\n\n  useEffect(() => {\n    console.log('effect');\n\n    const eventHandler = response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    };\n\n    const promise = axios.get('http://localhost:3001/notes');\n    promise.then(eventHandler);\n  }, []); // Using useEffect\n  // useEffect(() => {\n  //     console.log('effect')\n  //     axios\n  //         .get('http://localhost:3001/notes')\n  //         .then(response => {\n  //             console.log('promise fulfilled')\n  //             setNotes(response.data)\n  //         })\n  // }, [])\n  // console.log('render', notes.length, 'notes')\n  // Rewriting useEffect\n\n  const hook = () => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n\n  const addNote = event => {\n    event.preventDefault(); // The default action submits a form & cause the page to reload.\n\n    console.log('button clicked', event.target);\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote('');\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important); //  === true is redundant because note.important is either true or false\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"show \", showAll ? 'important' : 'all')), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, notesToShow.map(note => /*#__PURE__*/React.createElement(Note, {\n    key: note.id,\n    note: note,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/lorenzo/MEGAsync/Web Dev/fullstack2020/part2/lesson/comments_page/src/App.js"],"names":["React","useState","useEffect","axios","Note","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","console","log","eventHandler","response","data","promise","get","then","hook","addNote","event","preventDefault","target","noteObject","content","date","Date","toISOString","important","Math","random","id","length","concat","handleNoteChange","value","notesToShow","filter","note","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from \"./components/Note\";\n\nconst App = (props) => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('')\n    const [showAll, setShowAll] = useState(true)\n\n    // Using eventHnadler\n    useEffect(() => {\n        console.log('effect')\n\n        const eventHandler = response => {\n            console.log('promise fulfilled')\n            setNotes(response.data)\n        }\n\n        const promise = axios.get('http://localhost:3001/notes')\n        promise.then(eventHandler)\n    }, [])\n\n    // Using useEffect\n    // useEffect(() => {\n    //     console.log('effect')\n    //     axios\n    //         .get('http://localhost:3001/notes')\n    //         .then(response => {\n    //             console.log('promise fulfilled')\n    //             setNotes(response.data)\n    //         })\n    // }, [])\n    // console.log('render', notes.length, 'notes')\n\n    // Rewriting useEffect\n    const hook = () => {\n        console.log('effect')\n        axios\n            .get('http://localhost:3001/notes')\n            .then(response => {\n                console.log('promise fulfilled')\n                setNotes(response.data)\n            })\n    }\n\n    useEffect(hook, [])\n\n    const addNote = (event) => {\n        event.preventDefault() // The default action submits a form & cause the page to reload.\n        console.log('button clicked', event.target)\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() < 0.5,\n            id: notes.length + 1,\n        }\n\n        setNotes(notes.concat(noteObject))\n        setNewNote('')\n    }\n\n    const handleNoteChange = (event) => {\n        console.log(event.target.value)\n        setNewNote(event.target.value)\n    }\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important) //  === true is redundant because note.important is either true or false\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n            <ul>\n                {notesToShow.map(note =>\n                    <Note key={note.id} note={note} />\n                )}\n            </ul>\n            <form onSubmit={addNote}>\n                <input\n                    value={newNote}\n                    onChange={handleNoteChange}\n                />\n                <button type=\"submit\">save</button>\n            </form>\n        </div>\n    );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}