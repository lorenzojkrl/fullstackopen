{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = async newObject => {\n  console.log('create');\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  console.log('token', token);\n  const response = await axios.post(baseUrl, newObject, config).then(console.log);\n  console.log('response', response);\n  return response.data;\n};\n\nconst update = async (id, updatedBlog) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const {\n    id: _notUsedId,\n    ...payload\n  } = updatedBlog;\n  payload.user = payload.user.id;\n  console.log(`payload`, payload);\n  const response = await axios.put(`${baseUrl}/${id}`, payload, config);\n  return response.data;\n};\n\nconst remove = async id => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove,\n  setToken\n};","map":{"version":3,"sources":["/home/lorenzo/MEGAsync/Web Dev/fullstackopen/part_7/bloglist/frontend_bloglist/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","create","newObject","console","log","config","headers","Authorization","post","update","id","updatedBlog","_notUsedId","payload","user","put","remove","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AAC3BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACD,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAOC,SAAP,IAAqB;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEf;AAAjB;AADI,GAAf;AAGAW,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBZ,KAArB;AAEA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACkB,IAAN,CAAWjB,OAAX,EAAoBW,SAApB,EAA+BG,MAA/B,EAAuCP,IAAvC,CAA4CK,OAAO,CAACC,GAApD,CAAvB;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,QAAxB;AACA,SAAOA,QAAQ,CAACC,IAAhB;AACD,CAXD;;AAaA,MAAMS,MAAM,GAAG,OAAOC,EAAP,EAAWC,WAAX,KAA2B;AACxC,QAAMN,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEf;AAAjB;AADI,GAAf;AAIA,QAAM;AAAEkB,IAAAA,EAAE,EAAEE,UAAN;AAAkB,OAAGC;AAArB,MAAiCF,WAAvC;AACAE,EAAAA,OAAO,CAACC,IAAR,GAAeD,OAAO,CAACC,IAAR,CAAaJ,EAA5B;AAEAP,EAAAA,OAAO,CAACC,GAAR,CAAa,SAAb,EAAuBS,OAAvB;AACA,QAAMd,QAAQ,GAAG,MAAMT,KAAK,CAACyB,GAAN,CAAW,GAAExB,OAAQ,IAAGmB,EAAG,EAA3B,EAA8BG,OAA9B,EAAuCR,MAAvC,CAAvB;AAEA,SAAON,QAAQ,CAACC,IAAhB;AACD,CAZD;;AAcA,MAAMgB,MAAM,GAAG,MAAON,EAAP,IAAc;AAC3B,QAAML,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEf;AAAjB;AADI,GAAf;AAIA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAAC2B,MAAN,CAAc,GAAE1B,OAAQ,IAAGmB,EAAG,EAA9B,EAAiCL,MAAjC,CAAvB;AACA,SAAON,QAAQ,CAACC,IAAhB;AACD,CAPD;;AAUA,eAAe;AAAEL,EAAAA,MAAF;AAAUM,EAAAA,MAAV;AAAkBQ,EAAAA,MAAlB;AAA0BO,EAAAA,MAA1B;AAAkCvB,EAAAA;AAAlC,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n  console.log('create');\n\n  const config = {\n    headers: { Authorization: token },\n  }\n  console.log('token', token);\n\n  const response = await axios.post(baseUrl, newObject, config).then(console.log)\n  console.log('response', response);\n  return response.data\n}\n\nconst update = async (id, updatedBlog) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const { id: _notUsedId, ...payload } = updatedBlog\n  payload.user = payload.user.id\n\n  console.log(`payload`, payload);\n  const response = await axios.put(`${baseUrl}/${id}`, payload, config)\n\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\n\nexport default { getAll, create, update, remove, setToken }"]},"metadata":{},"sourceType":"module"}